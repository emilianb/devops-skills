// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Benday.Presidents.CodedUiTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertFirstName - Use 'AssertFirstNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertFirstName()
        {
            #region Variable Declarations
            HtmlEdit uIFirstNameEdit = this.UINewtabInternetExplorWindow.UIEditPresidentsDatabaDocument.UIFirstNameEdit;
            #endregion

            // Verify that the 'Text' property of 'First Name' text box equals 'Chester'
            Assert.AreEqual(this.AssertFirstNameExpectedValues.UIFirstNameEditText, uIFirstNameEdit.Text, "Wrong first name");
        }
        
        /// <summary>
        /// AssertLastName - Use 'AssertLastNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertLastName()
        {
            #region Variable Declarations
            HtmlEdit uILastNameEdit = this.UINewtabInternetExplorWindow.UIEditPresidentsDatabaDocument.UILastNameEdit;
            #endregion

            // Verify that the 'Text' property of 'Last Name' text box equals 'Arthur'
            Assert.AreEqual(this.AssertLastNameExpectedValues.UILastNameEditText, uILastNameEdit.Text, "Wrong last name value");
        }
        
        /// <summary>
        /// NavigateToChesterArthur
        /// </summary>
        public void NavigateToChesterArthur()
        {
            #region Variable Declarations
            HtmlHyperlink uIEditHyperlink = this.UINewtabInternetExplorWindow.UIIndexPresidentsDatabDocument.UIEditHyperlink;
            #endregion

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(16, 9));
        }
        
        /// <summary>
        /// OpenApp - Use 'OpenAppParams' to pass parameters into this method.
        /// </summary>
        public void OpenApp()
        {
            #region Variable Declarations
            BrowserWindow uINewtabInternetExplorWindow = this.UINewtabInternetExplorWindow;
            #endregion

            // Go to web page 'http://localhost:21310/'
            uINewtabInternetExplorWindow.NavigateToUrl(new System.Uri(this.OpenAppParams.UINewtabInternetExplorWindowUrl));
        }
        
        #region Properties
        public virtual AssertFirstNameExpectedValues AssertFirstNameExpectedValues
        {
            get
            {
                if ((this.mAssertFirstNameExpectedValues == null))
                {
                    this.mAssertFirstNameExpectedValues = new AssertFirstNameExpectedValues();
                }
                return this.mAssertFirstNameExpectedValues;
            }
        }
        
        public virtual AssertLastNameExpectedValues AssertLastNameExpectedValues
        {
            get
            {
                if ((this.mAssertLastNameExpectedValues == null))
                {
                    this.mAssertLastNameExpectedValues = new AssertLastNameExpectedValues();
                }
                return this.mAssertLastNameExpectedValues;
            }
        }
        
        public virtual OpenAppParams OpenAppParams
        {
            get
            {
                if ((this.mOpenAppParams == null))
                {
                    this.mOpenAppParams = new OpenAppParams();
                }
                return this.mOpenAppParams;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        
        public UIPresidentSearchPresiWindow UIPresidentSearchPresiWindow
        {
            get
            {
                if ((this.mUIPresidentSearchPresiWindow == null))
                {
                    this.mUIPresidentSearchPresiWindow = new UIPresidentSearchPresiWindow();
                }
                return this.mUIPresidentSearchPresiWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertFirstNameExpectedValues mAssertFirstNameExpectedValues;
        
        private AssertLastNameExpectedValues mAssertLastNameExpectedValues;
        
        private OpenAppParams mOpenAppParams;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        
        private UIPresidentSearchPresiWindow mUIPresidentSearchPresiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertFirstName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertFirstNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'First Name' text box equals 'Chester'
        /// </summary>
        public string UIFirstNameEditText = "Chester";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertLastName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertLastNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Last Name' text box equals 'Arthur'
        /// </summary>
        public string UILastNameEditText = "Arthur";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenApp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OpenAppParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:21310/'
        /// </summary>
        public string UINewtabInternetExplorWindowUrl = "http://localhost:21310/";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            this.WindowTitles.Add("Index - Presidents Database");
            this.WindowTitles.Add("Edit - Presidents Database");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexPresidentsDatabDocument UIIndexPresidentsDatabDocument
        {
            get
            {
                if ((this.mUIIndexPresidentsDatabDocument == null))
                {
                    this.mUIIndexPresidentsDatabDocument = new UIIndexPresidentsDatabDocument(this);
                }
                return this.mUIIndexPresidentsDatabDocument;
            }
        }
        
        public UIEditPresidentsDatabaDocument UIEditPresidentsDatabaDocument
        {
            get
            {
                if ((this.mUIEditPresidentsDatabaDocument == null))
                {
                    this.mUIEditPresidentsDatabaDocument = new UIEditPresidentsDatabaDocument(this);
                }
                return this.mUIEditPresidentsDatabaDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexPresidentsDatabDocument mUIIndexPresidentsDatabDocument;
        
        private UIEditPresidentsDatabaDocument mUIEditPresidentsDatabaDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIIndexPresidentsDatabDocument : HtmlDocument
    {
        
        public UIIndexPresidentsDatabDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - Presidents Database";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21310/";
            this.WindowTitles.Add("Index - Presidents Database");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/President/Edit/55";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21310/President/Edit/55";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/President/Edit/55\"";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIEditHyperlink.WindowTitles.Add("Index - Presidents Database");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.Class] = "navbar-toggle";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"navbar-toggle\" type=\"button\" data";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIItemButton.WindowTitles.Add("Index - Presidents Database");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIEditHyperlink;
        
        private UIItemTable mUIItemTable;
        
        private HtmlButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "First Name \r\n\r\nLast Name \r\n\r\nDate of Bir";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "44";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index - Presidents Database");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIChesterCell
        {
            get
            {
                if ((this.mUIChesterCell == null))
                {
                    this.mUIChesterCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Chester ";
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "11";
                    this.mUIChesterCell.WindowTitles.Add("Index - Presidents Database");
                    #endregion
                }
                return this.mUIChesterCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIChesterCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEditPresidentsDatabaDocument : HtmlDocument
    {
        
        public UIEditPresidentsDatabaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - Presidents Database";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/President/Edit/55";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21310/President/Edit/55";
            this.WindowTitles.Add("Edit - Presidents Database");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIFirstNameEdit
        {
            get
            {
                if ((this.mUIFirstNameEdit == null))
                {
                    this.mUIFirstNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIFirstNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "FirstName";
                    this.mUIFirstNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "FirstName";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "First Name";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"FirstName\" class=\"form-control tex";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIFirstNameEdit.WindowTitles.Add("Edit - Presidents Database");
                    #endregion
                }
                return this.mUIFirstNameEdit;
            }
        }
        
        public HtmlEdit UILastNameEdit
        {
            get
            {
                if ((this.mUILastNameEdit == null))
                {
                    this.mUILastNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILastNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "LastName";
                    this.mUILastNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "LastName";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Last Name";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"LastName\" class=\"form-control text";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUILastNameEdit.WindowTitles.Add("Edit - Presidents Database");
                    #endregion
                }
                return this.mUILastNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIFirstNameEdit;
        
        private HtmlEdit mUILastNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPresidentSearchPresiWindow : BrowserWindow
    {
        
        public UIPresidentSearchPresiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "President Search - Presidents Database";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("President Search - Presidents Database");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIPresidentSearchPresiDocument UIPresidentSearchPresiDocument
        {
            get
            {
                if ((this.mUIPresidentSearchPresiDocument == null))
                {
                    this.mUIPresidentSearchPresiDocument = new UIPresidentSearchPresiDocument(this);
                }
                return this.mUIPresidentSearchPresiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPresidentSearchPresiDocument mUIPresidentSearchPresiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPresidentSearchPresiDocument : HtmlDocument
    {
        
        public UIPresidentSearchPresiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "President Search - Presidents Database";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Search";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21310/Search";
            this.WindowTitles.Add("President Search - Presidents Database");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "search";
                    this.mUISearchButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISearchButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUISearchButton.WindowTitles.Add("President Search - Presidents Database");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        
        public UIItemTable1 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable1(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/President/Details/21";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21310/President/Details/21";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/President/Details/21\"";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "8";
                    this.mUIDetailsHyperlink.WindowTitles.Add("President Search - Presidents Database");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUISearchButton;
        
        private UIItemTable1 mUIItemTable;
        
        private HtmlHyperlink mUIDetailsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTable1 : HtmlTable
    {
        
        public UIItemTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "First Name\r\n\r\nLast Name\r\n\r\n\r\n\r\nChester A";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("President Search - Presidents Database");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIChesterCell
        {
            get
            {
                if ((this.mUIChesterCell == null))
                {
                    this.mUIChesterCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIChesterCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Chester ";
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIChesterCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIChesterCell.WindowTitles.Add("President Search - Presidents Database");
                    #endregion
                }
                return this.mUIChesterCell;
            }
        }
        
        public HtmlCell UIArthurCell
        {
            get
            {
                if ((this.mUIArthurCell == null))
                {
                    this.mUIArthurCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIArthurCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIArthurCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIArthurCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIArthurCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Arthur ";
                    this.mUIArthurCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIArthurCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIArthurCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIArthurCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIArthurCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "2";
                    this.mUIArthurCell.WindowTitles.Add("President Search - Presidents Database");
                    #endregion
                }
                return this.mUIArthurCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIChesterCell;
        
        private HtmlCell mUIArthurCell;
        #endregion
    }
}
